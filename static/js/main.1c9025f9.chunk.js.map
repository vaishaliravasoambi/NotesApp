{"version":3,"sources":["modals/CreateNotes.js","modals/EditTask.js","components/Card.js","components/NotesList.js","App.js","reportWebVitals.js","index.js"],"names":["CreateNotes","modal","toggle","save","useState","taskName","setTaskName","description","setDescription","handleChange","e","target","name","value","Modal","isOpen","ModalHeader","ModalBody","className","type","onChange","rows","ModalFooter","Button","color","onClick","preventDefault","taskObj","EditTask","updateTask","useEffect","Name","Description","tempObj","useStyles","require","makeStyles","theme","root","palette","text","primary","Card","index","deleteTask","updateListArray","setModal","colors","primaryColor","secondaryColor","classes","class","style","Grid","container","item","xs","obj","NotesList","taskList","setTaskList","arr","localStorage","getItem","JSON","parse","tempList","splice","setItem","stringify","window","location","reload","map","push","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c9025f9.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst CreateNotes = ({modal, toggle, save}) => {\r\n    const [taskName, setTaskName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        \r\n        const {name, value} = e.target\r\n\r\n        if(name === \"taskName\"){\r\n            setTaskName(value)\r\n        }else{\r\n            setDescription(value)\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const handleSave = (e) => {\r\n        e.preventDefault()\r\n        let taskObj = {}\r\n        taskObj[\"Name\"] = taskName\r\n        taskObj[\"Description\"] = description\r\n        save(taskObj)\r\n\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={modal} toggle={toggle}>\r\n            <ModalHeader toggle={toggle}>Create Note</ModalHeader>\r\n            <ModalBody>\r\n            \r\n                    <div className = \"form-group\">\r\n                        <label>Title</label>\r\n                        <input type=\"text\" className = \"form-control\" value = {taskName} onChange = {handleChange} name = \"taskName\"/>\r\n                    </div>\r\n                    <div className = \"form-group\">\r\n                        <label>Description</label>\r\n                        <textarea rows = \"5\" className = \"form-control\" value = {description} onChange = {handleChange} name = \"description\"></textarea>\r\n                    </div>\r\n                \r\n            </ModalBody>\r\n            <ModalFooter>\r\n            <Button color=\"primary\" onClick={handleSave}>Create</Button>{' '}\r\n            <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n            </ModalFooter>\r\n      </Modal>\r\n    );\r\n};\r\n\r\nexport default CreateNotes;","import React, { useState , useEffect} from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst EditTask = ({modal, toggle, updateTask, taskObj}) => {\r\n    const [taskName, setTaskName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        \r\n        const {name, value} = e.target\r\n\r\n        if(name === \"taskName\"){\r\n            setTaskName(value)\r\n        }else{\r\n            setDescription(value)\r\n        }\r\n\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTaskName(taskObj.Name)\r\n        setDescription(taskObj.Description)\r\n    },[])\r\n\r\n    const handleUpdate = (e) => {\r\n        e.preventDefault();\r\n        let tempObj = {}\r\n        tempObj['Name'] = taskName\r\n        tempObj['Description'] = description\r\n        updateTask(tempObj)\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={modal} toggle={toggle}>\r\n            <ModalHeader toggle={toggle}>Update Task</ModalHeader>\r\n            <ModalBody>\r\n            \r\n                    <div className = \"form-group\">\r\n                        <label>Task Name</label>\r\n                        <input type=\"text\" className = \"form-control\" value = {taskName} onChange = {handleChange} name = \"taskName\"/>\r\n                    </div>\r\n                    <div className = \"form-group\">\r\n                        <label>Description</label>\r\n                        <textarea rows = \"5\" className = \"form-control\" value = {description} onChange = {handleChange} name = \"description\"></textarea>\r\n                    </div>\r\n                \r\n            </ModalBody>\r\n            <ModalFooter>\r\n            <Button color=\"primary\" onClick={handleUpdate}>Update</Button>{' '}\r\n            <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n            </ModalFooter>\r\n      </Modal>\r\n    );\r\n};\r\n\r\nexport default EditTask;\r\n\r\n","import React, {useState} from 'react';\r\nimport EditTask from '../modals/EditTask'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteRoundedIcon from '@material-ui/icons/DeleteRounded';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\n\r\nvar FontAwesome = require('react-fontawesome')\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      color: theme.palette.text.primary,\r\n    },\r\n  }));\r\nconst Card = ({taskObj, index, deleteTask, updateListArray}) => {\r\n    const [modal, setModal] = useState(false);\r\n\r\n    const colors = [\r\n        {\r\n            primaryColor : \"#5D93E1\",\r\n            secondaryColor : \"#ECF3FC\"\r\n        },\r\n        {\r\n            primaryColor : \"#F9D288\",\r\n            secondaryColor : \"#FEFAF1\"\r\n        },\r\n        {\r\n            primaryColor : \"#5DC250\",\r\n            secondaryColor : \"#F2FAF1\"\r\n        },\r\n        {\r\n            primaryColor : \"#F48687\",\r\n            secondaryColor : \"#FDF1F1\"\r\n        },\r\n        {\r\n            primaryColor : \"#B964F7\",\r\n            secondaryColor : \"#F3F0FD\"\r\n        }\r\n    ]\r\n\r\n    const toggle = () => {\r\n        setModal(!modal);\r\n    }\r\n\r\n    const updateTask = (obj) => {\r\n        updateListArray(obj, index)\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        deleteTask(index)\r\n    }\r\n\r\n    \r\n      const classes = useStyles();\r\n    return (\r\n        \r\n\r\n        <div class = \"card-wrapper mr-5\">\r\n            <div class = \"card-top\" style={{\"background-color\": colors[index%5].primaryColor}}></div>\r\n            <div class = \"task-holder\">\r\n                <span class = \"card-header\" style={{\"background-color\": colors[index%5].secondaryColor, \"border-radius\": \"10px\"}}>{taskObj.Name}</span>\r\n                <p className = \"mt-3\">{taskObj.Description}</p>\r\n\r\n                <div style={{\"position\": \"absolute\", \"right\" : \"20px\", \"bottom\" : \"20px\"}}>\r\n                <Grid container className={classes.root}>\r\n            < Grid item xs={8}>\r\n                 \r\n                 <EditIcon style={{\"color\" : colors[index%5].primaryColor, \"cursor\" : \"pointer\"}} onClick = {() => setModal(true)}></EditIcon>\r\n                     \r\n                     <DeleteRoundedIcon style = {{\"color\" : colors[index%5].primaryColor, \"cursor\" : \"pointer\"}} onClick = {handleDelete} />\r\n                </Grid>\r\n                 </Grid>\r\n                 \r\n\r\n                    {/* <i class = \"far fa-edit mr-3\" style={{\"color\" : colors[index%5].primaryColor, \"cursor\" : \"pointer\"}} onClick = {() => setModal(true)}>Edit</i> */}\r\n                    {/* <i class=\"fas fa-trash-alt\" style = {{\"color\" : colors[index%5].primaryColor, \"cursor\" : \"pointer\"}} onClick = {handleDelete}>Delete</i> */}\r\n                </div>\r\n        </div>\r\n        <EditTask modal = {modal} toggle = {toggle} updateTask = {updateTask} taskObj = {taskObj}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;","import React, {useEffect, useState} from 'react';\r\nimport CreateTask from '../modals/CreateNotes'\r\nimport Card from './Card';\r\n\r\nconst NotesList = () => {\r\n    const [modal, setModal] = useState(false);\r\n    const [taskList, setTaskList] = useState([])\r\n    \r\n    useEffect(() => {\r\n        let arr = localStorage.getItem(\"taskList\")\r\n       \r\n        if(arr){\r\n            let obj = JSON.parse(arr)\r\n            setTaskList(obj)\r\n        }\r\n    }, [])\r\n\r\n\r\n    const deleteTask = (index) => {\r\n        let tempList = taskList\r\n        tempList.splice(index, 1)\r\n        localStorage.setItem(\"taskList\", JSON.stringify(tempList))\r\n        setTaskList(tempList)\r\n        window.location.reload()\r\n    }\r\n\r\n    const updateListArray = (obj, index) => {\r\n        let tempList = taskList\r\n        tempList[index] = obj\r\n        localStorage.setItem(\"taskList\", JSON.stringify(tempList))\r\n        setTaskList(tempList)\r\n        window.location.reload()\r\n    }\r\n\r\n    const toggle = () => {\r\n        setModal(!modal);\r\n    }\r\n\r\n    const saveTask = (taskObj) => {\r\n        let tempList = taskList\r\n        tempList.push(taskObj)\r\n        localStorage.setItem(\"taskList\", JSON.stringify(tempList))\r\n        setModal(false)\r\n        setTaskList(taskList)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className = \"header text-center\">\r\n                <h3>Notes</h3>\r\n                <button className = \"btn btn-primary mt-2\" onClick = {() => setModal(true)} >Create Note</button>\r\n            </div>\r\n            <div className = \"task-container\">\r\n            {taskList && taskList.map((obj , index) => <Card taskObj = {obj} index = {index} deleteTask = {deleteTask} updateListArray = {updateListArray}/> )}\r\n            </div>\r\n            <CreateTask toggle = {toggle} modal = {modal} save = {saveTask}/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NotesList;","\nimport './App.css';\nimport NotesList from './components/NotesList';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NotesList/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import 'bootstrap/dist/css/bootstap.min.css'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}